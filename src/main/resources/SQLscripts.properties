findAllIngredientByName=SELECT id, ingredientsname, type, category, isActive, image FROM ingredients WHERE ingredientsname LIKE '%s';
findAllIngredientFiltered=SELECT id, ingredientsname, type, category, isActive, image FROM ingredients WHERE type LIKE '%s' AND category LIKE '%s' AND isActive IN (%s);
findAllKitchenwareByName=SELECT id, kitchenwarename, type, category, isActive, image FROM kitchenware WHERE kitchenwarename LIKE '%s';
findAllKitchenwareFiltered=SELECT id, kitchenwarename, type, category, isActive, image FROM kitchenware WHERE type LIKE '%s' AND category LIKE '%s' AND isActive IN (%s);
createRecipe=INSERT INTO recipes (name, rating, alcohol, sugarless, isActive, image, recipe) values (:name, :rating, :alcohol, :sugarless, :isActive, :image, :recipe);
findRecipeByName=SELECT id, name, rating, alcohol, sugarless, isActive, image, recipe FROM recipes WHERE name = '%s' ORDER BY name;
findAllRecipesByName=SELECT id, name, rating, alcohol, sugarless, isActive, image, recipe FROM recipes WHERE name LIKE '%s' ORDER BY name;
findAllRecipesFiltered=SELECT id, name, rating, alcohol, sugarless, isActive, image, recipe FROM recipes WHERE \
  sugarless IN (%s) AND alcohol LIKE '%s' ORDER BY name;
findRecipeById=SELECT id, name, rating, alcohol, sugarless, isActive, image, recipe FROM recipes WHERE id = '%s' ORDER BY name;
editRecipe=UPDATE recipes set name = :name, recipe = :recipe, alcohol = :alcohol, image = :image, sugarless = :sugarless, isActive = :isActive WHERE id = :id;
removeRecipe=DELETE FROM recipes WHERE id = :id;
addToFavourites=INSERT INTO usertorecipes (userid, recipeid) values (:userid, :recipeid);
likeRecipe=UPDATE recipes set rating = rating + 1 WHERE id = :id;
withdrawLike=UPDATE recipes set rating = rating - 1 WHERE id = :id;
checkLike=SELECT id, userid, recipeid, liked, favourite FROM usertorecipes WHERE userid = '%s' AND recipeid = '%s';
likedLock=UPDATE usertorecipes set liked = :liked WHERE userid = :userid AND recipeid = :recipeid;
favouriteLock=UPDATE usertorecipes set favourite = :favourite WHERE userid = :userid AND recipeid = :recipeid;
dishSuggestion = SELECT r.* FROM recipes r \
  JOIN recipestoingr rtoi ON rtoi.recipeid = r.id \
  JOIN usertostock s ON rtoi.ingredientid = s.ingredientid \
  EXCEPT SELECT r.* FROM recipes r \
  JOIN recipestoingr i ON i.recipeid = r.id WHERE i.ingredientid \
  NOT IN (SELECT s.ingredientid FROM usertostock s \
  JOIN recipestoingr rtoi ON rtoi.ingredientid = s.ingredientid \
  WHERE s.userid = %s);
findEventByName=SELECT id, eventname, creatorid, eventtime FROM events WHERE eventname = '%s';
findAllEventsByName=SELECT id, eventname, creatorid, eventtime FROM events WHERE eventname LIKE '%s';
getEventsFiltered=SELECT events.id, eventname, creatorid, eventtime FROM events INNER JOIN eventstousers ON events.id = eventstousers.eventid INNER JOIN users ON eventstousers.userid = users.userid WHERE users.userid = '%s';
findEventById=SELECT id, eventname, creatorid, eventtime FROM events WHERE id = '%s';
createEvent=INSERT INTO events (creatorid, eventname, eventtime) values (:creatorid, :eventname, :eventtime);
editEvent=UPDATE events SET eventname = :eventname, eventtime = :eventtime WHERE creatorid = :creatorid and id = :id;
declineEvent=DELETE FROM events WHERE id = :id;
joinEvent=INSERT INTO eventstousers (eventid, userid) values (:eventid, :userid);
addRecipeToEvent=INSERT INTO eventstorecipes (eventid, recipeid) values (:eventid, :recipeid);
leaveEvent=DELETE FROM eventstousers WHERE eventid = :eventid AND userid = :userid;
removeRecipeFromEvent=DELETE FROM eventstorecipes WHERE eventid = :eventid AND recipeid = :recipeid;
containsRecipes=SELECT recipes.id, recipes.name, alcohol, sugarless, isActive, recipes.image, recipes.recipe, rating FROM eventstorecipes INNER JOIN recipes ON recipeid = recipes.id WHERE eventid = '%s';
containsUsers=SELECT users.userid, users.nickname FROM eventstousers INNER JOIN users ON eventstousers.userid = users.userid WHERE eventid = '%s';
userInEvent=SELECT id from eventstousers WHERE eventid = '%s' AND userid = '%s';
recipeInEvent=SELECT id from eventstorecipes WHERE eventid = '%s' AND recipeid = '%s';

addIngredientToRecipe=INSERT INTO recipestoingr (recipeid, ingredientid) values (:recipeid, :ingredientid);
addKitchenwareToRecipe=INSERT INTO kitchenwaretorecipes (kitchenwareid, recipeid) values (:kitchenwareid, :recipeid);
removeIngredientFromRecipe=DELETE FROM recipestoingr WHERE recipeid = :recipeid AND ingredientid = :ingredientid;
removeKitchenwareFromRecipe=DELETE FROM kitchenwaretorecipes WHERE kitchenwareid = :kitchenwareid AND recipeid = :recipeid;
containsKitchenware=SELECT kitchenware.id, kitchenwarename, type, category, isActive, kitchenware.image FROM kitchenwaretorecipes INNER JOIN kitchenware ON kitchenwareid = kitchenware.id WHERE recipeid = '%s';
containsIngredients=SELECT ingredients.id, ingredientsname, type, category, isActive, ingredients.image FROM recipestoingr INNER JOIN ingredients ON ingredientid = ingredients.id WHERE recipeid = '%s';
kitchenwareInRecipe=SELECT id from kitchenwaretorecipes WHERE recipeid = '%s' AND kitchenwareid = '%s';
ingredientInRecipe=SELECT id from recipestoingr WHERE recipeid = '%s' AND ingredientid = '%s';

regUser = INSERT INTO users (email, password, activation) VALUES (:email, :password, :activation);
ActivateUser = UPDATE users set roleid = :roleid, nickname = :nickname, activation = null WHERE activation = :activation;
emailSelect = SELECT userid, email FROM users WHERE email = '%s';
moderatorCreation = INSERT INTO users (email, activation, isactive) values (:email, :activation, :isactive);
ActivateModerator = UPDATE users set roleid = :roleid, password = :password, nickname = :nickname WHERE activation = :activation;
getModerators = SELECT userid, email, nickname, isactive, image from  users where roleid = 4;
EditModerator = UPDATE users set email = :email, nickname = :nickname, isactive = :isactive, image = :image WHERE userid = :userid;
RemoveModerator = UPDATE users SET isactive = false WHERE userid = :userid;
SearchModerator = SELECT userid, email, nickname, isactive FROM users WHERE roleid = 4 AND nickname = '%s';
FilterModerator = SELECT userid, email, nickname, isactive FROM users WHERE isactive = '%s';
updateActivation = UPDATE users set activation = ? WHERE email = ?;
findByActivation = SELECT email, password FROM users WHERE activation = '%s';
updatePassword = UPDATE users set password = ?, activation = NULL WHERE email = ?;
findRoleByEmail = SELECT id, rolename FROM role INNER JOIN users ON role.id = users.roleid WHERE email = '%s';
findUserByEmail = SELECT userid, nickname, email, password, roleid, isactive, image FROM users WHERE email = '%s';
findUserById = SELECT userid, nickname, email, password, roleid, isactive, image FROM users WHERE userid = '%s';
userInfo = SELECT nickname, email FROM users WHERE email = '%s';
personalInfo = SELECT nickname, information, image FROM users WHERE email = '%s';
EditUser = UPDATE users set nickname = ?, information = ? WHERE email = ?;

friendlistCreation = INSERT INTO friendlist (ownerid, friendid, statusid) values (:ownerid, :friendid, :statusid);
friendList=SELECT users.userid, nickname, email, statusid, image FROM users INNER JOIN friendlist ON users.userid = friendlist.friendid WHERE ownerid = '%s' AND statusid IN (3,4,5) ;
EditFriendlist = UPDATE friendlist set statusid = :statusid WHERE ownerid = :ownerid AND friendid = :friendid;
RemoveFriendlist = DELETE FROM friendlist WHERE (ownerid = :ownerid AND friendid = :friendid) OR (ownerid = :friendid AND friendid = :ownerid);
FindFriendlist = SELECT id, ownerid, friendid, statusid FROM friendlist WHERE ownerid = '%s' AND friendid = '%s';
allFriends = SELECT id, ownerid, friendid, statusid FROM friendlist WHERE ownerid = '%s';
FindStatusId = SELECT id, statusname FROM friendsstatus WHERE statusname = '%s';
FindIdByEmail = SELECT userid, email, roleid FROM users WHERE email = '%s';
FindInfoByNickname = SELECT nickname, information, image FROM users WHERE nickname = '%s' AND email != '%s';
FindIdsByNickname = SELECT userid, nickname, email, password, roleid, isactive, image FROM users WHERE nickname LIKE '%s';
getUserPhoto = SELECT image FROM users WHERE email = '%s';
editUserPhoto = UPDATE users SET image = ? WHERE email = ?;

findIngredientByName = SELECT id, ingredientsname, type, category, isActive, image FROM ingredients WHERE ingredientsname LIKE '%s';
findIngredientById = SELECT id, ingredientsname, type, category, isActive, image FROM ingredients WHERE id = '%s';
editIngredient = UPDATE ingredients set ingredientsname = :ingredientsname, type = :type, category = :category, isActive = :isActive, image = :image WHERE id = :id;
createIngredient = INSERT INTO ingredients (ingredientsname, type, category, image) values (:ingredientsname, :type, :category, :image);
removeIngredient = UPDATE ingredients set isActive = false WHERE id = :id;


findKitchenwareByName = SELECT id, kitchenwarename, type, category, isActive, image FROM kitchenware WHERE kitchenwarename LIKE '%s';
editKitchenware = UPDATE kitchenware set kitchenwarename = :kitchenwarename, type = :type, category = :category, isActive = :isActive, image = :image WHERE id = :id;
findKitchenwareById = SELECT id, kitchenwarename, type, category, isActive, image FROM kitchenware WHERE id = '%s';
createKitchenware = INSERT INTO Kitchenware (kitchenwarename,type,category, isActive, image) values (:kitchenwarename, :type, :category, :isActive, :image);
removeKitchenware = UPDATE kitchenware set isActive = false WHERE id = :id;

addStockIngredient = INSERT INTO usertostock (userid, ingredientid, quantity) values (:userid, :ingredientid, :quantity);
findExistingStockIngredientById = SELECT id, userid, ingredientid, quantity FROM usertostock WHERE userid = '%s' AND ingredientid = '%s';
removeStockIngredient = DELETE FROM usertostock WHERE id = :id;
editStockIngredient = UPDATE usertostock set quantity = :quantity WHERE id = :id;
findStockIngredientsByName = SELECT ingredients.id, ingredientsname, type, category, isactive, quantity, image FROM usertostock LEFT JOIN ingredients ON usertostock.ingredientid = ingredients.id WHERE userid = '%s' AND ingredientsname LIKE '%s';
findStockIngredientsFiltered = SELECT ingredients.id, ingredientsname, type, category, isactive, quantity, image FROM usertostock LEFT JOIN ingredients ON usertostock.ingredientid = ingredients.id WHERE userid = '%s' AND type LIKE '%s' AND category LIKE '%s';
